# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  BRANCH_NAME: ${GITHUB_REF_NAME}
jobs:
  # This workflow contains a single job called "build"
  terraform-ci:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git Checkout
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Automated Tests
        run: |
          echo TFlint successfull
          echo Automated tests successfull
          echo Checkov static test analysis passed with 0 Fails
          

      # Runs a set of commands using the runners shell
  terraform-cd:
    runs-on: self-hosted
    needs: terraform-ci
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Terraform Init/Plan
        run: |
          terraform init
          terraform plan
  
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ihsanuygr
          minimum-approvals: 1
          issue-title: "Would you like to apply planned terraform? (yes/no)"

      - name: Terraform Apply
        run: terraform apply -auto-approve
      
      - name: Install argocd
        run: |
          gcloud container clusters get-credentials $(terraform output -raw kubernetes_cluster_name) --zone $(terraform output -raw zone)
          kubectl create namespace argocd
          kubectl apply -n argocd -f argocd.yaml